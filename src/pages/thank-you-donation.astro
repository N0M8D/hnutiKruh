---
import Layout from '../layouts/Page.astro';
import { Button } from '@components/odyssey-theme';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const seo = {
  title: 'Dƒõkujeme za dar | Hnut√≠ Kruh',
  description: 'Potvrzen√≠ p≈ôijet√≠ √∫daj≈Ø o daru.',
};

// Naƒçten√≠ VS z cookie (HttpOnly)
function getCookie(name: string, cookieHeader?: string | null) {
  if (!cookieHeader) return null;
  const parts = cookieHeader.split(/;\s*/);
  for (const p of parts) {
    const [k, ...rest] = p.split('=');
    if (k === name) return decodeURIComponent(rest.join('='));
  }
  return null;
}

const cookieHeader = Astro.request.headers.get('cookie');
const vsFromCookie = getCookie('lastDonationVS', cookieHeader);

let donation = null;
if (vsFromCookie) {
  donation = await prisma.donation.findUnique({
    where: { VariabilniSymbol: vsFromCookie }
  });
}

function fmtAmount(a?: any) {
  if (!a) return '';
  return new Intl.NumberFormat('cs-CZ', { style: 'currency', currency: 'CZK' }).format(Number(a));
}

const constantSymbol = '0666';

function computeCZIban(bankCode: string, accountNumber: string, prefix = '') {
  const p = prefix.padStart(6,'0');
  const acc = accountNumber.padStart(10,'0');
  const bban = bankCode + p + acc;
  const rearranged = bban + '123500';
  let rem = 0;
  for (const ch of rearranged) rem = (rem * 10 + Number(ch)) % 97;
  const checksum = String(98 - rem).padStart(2,'0');
  return 'CZ' + checksum + bban;
}

let iban = '';
let spd = '';
let qrUrl = '';
if (donation) {
  iban = computeCZIban('2010', '2003303743');
  const amountStr = Number(donation.Castka).toFixed(2);
  const msg = encodeURIComponent('Dar Hnuti Kruh');
  spd = `SPD*1.0*ACC:${iban}*AM:${amountStr}*CC:CZK*X-VS:${donation.VariabilniSymbol}*X-KS:${constantSymbol}*MSG:${msg}`;
  const qp = new URLSearchParams({
    accountNumber: '2003303743',
    bankCode: '2010',
    amount: amountStr,
    currency: 'CZK',
    vs: donation.VariabilniSymbol,
    ks: constantSymbol,
    message: `Dar hnuti Kruh - ${donation.Jmeno} ${donation.Prijmeni}`
  });
  qrUrl = 'https://api.paylibo.com/paylibo/generator/czech/image?' + qp.toString();
}
---
<Layout {seo}>
  <section class="thank-you">
    {donation ? (
      <>
        <h1>Dƒõkujeme za v√°≈° dar! ‚ô•Ô∏è</h1>
        <p>P≈ôijali jsme √∫daje k daru d√°rce <strong>{donation.Jmeno} {donation.Prijmeni}</strong>.</p>
        <div class="summary">
          <ul>
            <li><strong>ƒå√°stka:</strong> {fmtAmount(donation.Castka)}</li>
            <li><strong>Variabiln√≠ symbol:</strong> {donation.VariabilniSymbol}</li>
            <li><strong>Konstantn√≠ symbol:</strong> {constantSymbol}</li>
            <li><strong>IBAN √∫ƒçtu:</strong> {iban}</li>
            <li><strong>E‚Äëmail:</strong> {donation.Email}</li>
            <li><strong>Telefon:</strong> {donation.Telefon}</li>
            <li><strong>Stav platby:</strong> {donation.paymentStatus}</li>
          </ul>
        </div>
        <p>
          Pros√≠m ode≈°lete bankovn√≠ p≈ôevod na transparentn√≠ √∫ƒçet:<br />
          <strong>2003303743/2010</strong><br />
          VS: <strong>{donation.VariabilniSymbol}</strong> &nbsp; KS: <strong>{constantSymbol}</strong>
        </p>
        <div class="qr-box">
          <img
            src={qrUrl}
            alt="QR platba pro rychl√© zad√°n√≠ bankovn√≠ho p≈ôevodu"
            width="240"
            height="240"
            loading="lazy"
            decoding="async"
            class="qr-img"
          />
          <p class="qr-caption">Naskenujte QR k√≥d ve sv√© bankovn√≠ aplikaci.</p>
          <div class="qr-actions">
            <details class="raw-spd">
              <summary>Platebn√≠ ≈ôetƒõzec (SPD)</summary>
              <div class="spd-inline">
                <code id="spdText">{spd}</code>
                <button
                  type="button"
                  id="copySpd"
                  class="copy-icon"
                  aria-label="Zkop√≠rovat platebn√≠ ≈ôetƒõzec"
                  title="Kop√≠rovat"
                  data-spd={spd}
                >üìã</button>
              </div>
            </details>
            <small id="copyStatus" class="copy-status" aria-live="polite"></small>
          </div>
        </div>
        {donation.Poznamka && <p><em>V√°≈° vzkaz:</em> {donation.Poznamka}</p>}
        <div class="button-wrapper">
          <Button href="/" fullWidth>Zpƒõt na hlavn√≠ str√°nku</Button>
        </div>
      </>
    ) : (
      <>
        <h1>Dar nenalezen</h1>
        <p>Nebyly nalezeny √∫daje k posledn√≠mu daru. √ödaje jsou pro v√°s viditeln√© jen 24h, pokud jste platbu nestihli nebo se nƒõco nepovedlo kontaktujte n√°s a r√°di v√°m QR kod nebo pokyny k platbƒõ za≈°leme.</p>
        <div class="button-wrapper">
          <Button href="/forms/daruj" fullWidth>Zpƒõt na formul√°≈ô</Button>
        </div>
      </>
    )}
  </section>
</Layout>

<style>
.thank-you {
  /* zv√Ω≈°en√© odsazen√≠ naho≈ôe i dole pro oddƒõlen√≠ od headeru/footeru */
  padding:2.5rem 2rem 2.5rem;
  margin:2rem auto;
  max-width:760px;
  text-align:center;
}
.summary { text-align:left; margin:1.2rem auto; display:inline-block; }
.summary ul { list-style:none; padding:0; margin:0; font-size:.95rem; line-height:1.4; }
.qr-box {
  /* v√≠ce prostoru nad i pod QR sekc√≠ */
  margin:1rem auto 1rem;
  max-width:320px;
}
.qr-caption { font-size:.75rem; margin:.6rem 0 .4rem; opacity:.75; }
.qr-actions { display:flex; flex-direction:column; gap:.6rem; }
.raw-spd { margin-top:.4rem; text-align:left; }
.raw-spd summary { cursor:pointer; font-size:.7rem; letter-spacing:.05em; text-transform:uppercase; opacity:.75; }
.spd-inline {
  margin-top:.5rem;
  display:flex;
  align-items:center;
  gap:.4rem;
  background:rgba(0,0,0,.04);
  padding:.5rem .6rem;
  border-radius:8px;
  border:1px solid rgba(0,0,0,.08);
}
.spd-inline code {
  font-size:.6rem;
  line-height:1.2;
  word-break:break-all;
  flex:1;
}
.copy-icon {
  border:1px solid rgba(0,0,0,.15);
  background:#fff;
  padding:.25rem .45rem;
  border-radius:6px;
  cursor:pointer;
  font-size:.85rem;
  line-height:1;
  transition:.15s;
}
.copy-icon:hover,
.copy-icon:focus-visible {
  background:#f2f2f2;
  outline:none;
}
.copy-icon:active { transform:translateY(1px); }
.copy-status { font-size:.6rem; min-height:1em; opacity:.75; padding-left:.2rem; }
.qr-img { display:block; margin:0 auto; image-rendering:crisp-edges; max-width:100%; }
@media (prefers-color-scheme:dark){
  .qr-box { background:rgba(255,255,255,.07); border-color:rgba(255,255,255,.15); }
  .copy-icon { background:rgba(255,255,255,.08); color:#fff; border-color:rgba(255,255,255,.25); }
  .copy-icon:hover,
  .copy-icon:focus-visible { background:rgba(255,255,255,.15); }
  .raw-spd code { background:transparent; }
}
.button-wrapper { margin-top:2rem; }
</style>

<script is:inline>
// Kop√≠rov√°n√≠ SPD ≈ôetƒõzce (opraveno & dokonƒçeno)
(function(){
  const btn = document.getElementById('copySpd');
  const status = document.getElementById('copyStatus');
  if(!btn) return;
  const spd = btn.getAttribute('data-spd') || '';
  btn.addEventListener('click', async () => {
    if(!spd) return;
    try {
      await navigator.clipboard.writeText(spd);
      if(status) status.textContent = 'Zkop√≠rov√°no.';
    } catch {
      if(status) status.textContent = 'Kop√≠rov√°n√≠ selhalo.';
    }
    setTimeout(()=>{ if(status) status.textContent=''; }, 4000);
  });
})();
</script>
